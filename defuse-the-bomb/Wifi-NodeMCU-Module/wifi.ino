//------------------------------
// Wifi management for nodeMCU
// Used for the DTB
//
// $Id: wifi.ino,v 1.2 2018/07/20 14:42:18 cesare Exp cesare $
//------------------------------

#include <ESP8266WiFi.h>
#include <WiFiClient.h>
//#include <ESP8266WebServer.h>
#include <ESP8266WebServerSecure.h>
#include <DNSServer.h>

const byte DNS_PORT = 53;

//-------------------------------
const char *ssid = "DEFUSE-ME";
DNSServer dnsServer;
ESP8266WebServer server(80);
ESP8266WebServerSecure serverSecure(443);

//------------------------------

const String HtmlHtml = "<html><head>"
                        "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" /></head>";
const String HtmlHtmlClose = "</html>";
const String HtmlTitle = "<h1>Keep Calm & Call ServiceDesk: 035112233</h1><br/>\n";
const String HtmlImage = "<img src=\"data:image/png;base64, \
iVBORw0KGgoAAAANSUhEUgAAAUoAAABMCAMAAAA82Q6eAAAABGdBTUEAALGPC/xhBQAAAAFzUkdC\
AK7OHOkAAAX6aVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIg\
aWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2Jl\
Om5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjYtYzE0MiA3OS4xNjA5MjQsIDIw\
MTcvMDcvMTMtMDE6MDY6MzkgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3\
dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRm\
OmFib3V0PSIiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1sbnM6\
eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0RXZ0PSJodHRw\
Oi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiIHhtbG5zOmRjPSJo\
dHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8v\
bnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rv\
c2hvcCBDQyAyMDE4IChXaW5kb3dzKSIgeG1wOkNyZWF0ZURhdGU9IjIwMTgtMDUtMDhUMTU6MzE6\
MjArMDI6MDAiIHhtcDpNZXRhZGF0YURhdGU9IjIwMTgtMDUtMDhUMTU6MzE6MjArMDI6MDAiIHht\
cDpNb2RpZnlEYXRlPSIyMDE4LTA1LTA4VDE1OjMxOjIwKzAyOjAwIiB4bXBNTTpJbnN0YW5jZUlE\
PSJ4bXAuaWlkOmVmOTkzZjJmLWMzNmYtZGE0Yy05ZjllLTgxNTcyYjViMDZjNyIgeG1wTU06RG9j\
dW1lbnRJRD0iYWRvYmU6ZG9jaWQ6cGhvdG9zaG9wOmQ1MGUyZmRlLTgzOTgtYjg0MC1iMGI2LTFl\
MTE3NGI5OWY4MiIgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjk0ZjU5MGExLTQy\
MTYtMGE0OS1hNTQxLTljZGE4ZmFmMzk5ZiIgZGM6Zm9ybWF0PSJpbWFnZS9wbmciIHBob3Rvc2hv\
cDpDb2xvck1vZGU9IjMiIHBob3Rvc2hvcDpJQ0NQcm9maWxlPSJzUkdCIElFQzYxOTY2LTIuMSI+\
IDx4bXBNTTpIaXN0b3J5PiA8cmRmOlNlcT4gPHJkZjpsaSBzdEV2dDphY3Rpb249ImNyZWF0ZWQi\
IHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6OTRmNTkwYTEtNDIxNi0wYTQ5LWE1NDEtOWNkYThm\
YWYzOTlmIiBzdEV2dDp3aGVuPSIyMDE4LTA1LTA4VDE1OjMxOjIwKzAyOjAwIiBzdEV2dDpzb2Z0\
d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgQ0MgMjAxOCAoV2luZG93cykiLz4gPHJkZjpsaSBz\
dEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmVmOTkzZjJmLWMz\
NmYtZGE0Yy05ZjllLTgxNTcyYjViMDZjNyIgc3RFdnQ6d2hlbj0iMjAxOC0wNS0wOFQxNTozMToy\
MCswMjowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENDIDIwMTggKFdp\
bmRvd3MpIiBzdEV2dDpjaGFuZ2VkPSIvIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8\
L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0i\
ciI/PsTxvHsAAAAJcEhZcwAACxMAAAsTAQCanBgAAACWUExURUxpcSMfICMfICMfICMfICMfICMf\
ICMfIK9aK5lRKiMfICMfICMfICMfICMfICMfICMfICMfIMI8fs4+hencA/frAaG/NbDNOarLNrvW\
Ly5psQVrqwNxtgJ0u6pYK/eeITpbmau/KanAOaGyOrDILDNho4dJKAZqqARws6ZyIHFAJqF7GiMf\
IPN3MdQ/if/yAK/RNwJ0uxiyBmoAAAAsdFJOUwCI7szdEUB3xJQzRCK7VapmmcToxOjE5ujOysTo\
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\" alt=\"download.png\">";

// The certificate is stored in PMEM 
static const uint8_t x509[] PROGMEM = {
  0x30, 0x82, 0x01, 0x62, 0x30, 0x82, 0x01, 0x0c, 0x02, 0x09, 0x00, 0xce,
  0xd4, 0x7d, 0x5d, 0x4a, 0x93, 0x0c, 0x00, 0x30, 0x0d, 0x06, 0x09, 0x2a,
  0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05, 0x00, 0x30, 0x38,
  0x31, 0x1a, 0x30, 0x18, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x11, 0x64,
  0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x2d, 0x65, 0x76, 0x65, 0x6e,
  0x74, 0x2e, 0x69, 0x6f, 0x31, 0x1a, 0x30, 0x18, 0x06, 0x03, 0x55, 0x04,
  0x03, 0x0c, 0x11, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x2d,
  0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x69, 0x6f, 0x30, 0x1e, 0x17, 0x0d,
  0x31, 0x38, 0x30, 0x37, 0x32, 0x31, 0x31, 0x31, 0x30, 0x34, 0x31, 0x33,
  0x5a, 0x17, 0x0d, 0x33, 0x32, 0x30, 0x33, 0x32, 0x39, 0x31, 0x31, 0x30,
  0x34, 0x31, 0x33, 0x5a, 0x30, 0x38, 0x31, 0x1a, 0x30, 0x18, 0x06, 0x03,
  0x55, 0x04, 0x0a, 0x0c, 0x11, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
  0x64, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x69, 0x6f, 0x31, 0x1a,
  0x30, 0x18, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x11, 0x64, 0x6f, 0x77,
  0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
  0x69, 0x6f, 0x30, 0x5c, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86,
  0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x4b, 0x00, 0x30, 0x48,
  0x02, 0x41, 0x00, 0xcf, 0xc2, 0x85, 0x4b, 0x3f, 0x42, 0x3c, 0x49, 0xf1,
  0x43, 0x19, 0x87, 0xab, 0x2f, 0x9e, 0xb4, 0xe5, 0xd2, 0x5e, 0xb3, 0xfc,
  0x41, 0xfb, 0xcf, 0x1f, 0xaa, 0xc8, 0x88, 0x4e, 0x37, 0xe4, 0x2c, 0x38,
  0xff, 0x65, 0x7a, 0xca, 0xc1, 0x45, 0x83, 0x95, 0x9d, 0x20, 0x67, 0x7f,
  0xf1, 0xc6, 0x70, 0x45, 0xab, 0x8a, 0x81, 0xf5, 0xc8, 0xeb, 0x4d, 0x66,
  0x4d, 0xee, 0xac, 0x40, 0x2f, 0x7b, 0x4b, 0x02, 0x03, 0x01, 0x00, 0x01,
  0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01,
  0x0b, 0x05, 0x00, 0x03, 0x41, 0x00, 0x67, 0x03, 0xf8, 0x63, 0xd9, 0x28,
  0xb6, 0x36, 0xc2, 0x23, 0x43, 0x0f, 0xd5, 0x72, 0x85, 0xac, 0x0d, 0x76,
  0xb9, 0x37, 0xbc, 0xa4, 0xec, 0x1b, 0x59, 0x81, 0x72, 0xf8, 0x10, 0x0d,
  0x99, 0x8f, 0x44, 0x1a, 0xcc, 0x31, 0xb9, 0x53, 0xb5, 0x9f, 0xba, 0x0c,
  0xdb, 0xad, 0xc3, 0x11, 0xd5, 0xd2, 0xec, 0x26, 0x74, 0x8a, 0x29, 0x08,
  0x02, 0x04, 0xc8, 0xdb, 0xa4, 0xdb, 0x8d, 0x95, 0xc6, 0xf1
};

// And so is the key.  These could also be in DRAM
static const uint8_t rsakey[] PROGMEM = {
  0x30, 0x82, 0x01, 0x3a, 0x02, 0x01, 0x00, 0x02, 0x41, 0x00, 0xcf, 0xc2,
  0x85, 0x4b, 0x3f, 0x42, 0x3c, 0x49, 0xf1, 0x43, 0x19, 0x87, 0xab, 0x2f,
  0x9e, 0xb4, 0xe5, 0xd2, 0x5e, 0xb3, 0xfc, 0x41, 0xfb, 0xcf, 0x1f, 0xaa,
  0xc8, 0x88, 0x4e, 0x37, 0xe4, 0x2c, 0x38, 0xff, 0x65, 0x7a, 0xca, 0xc1,
  0x45, 0x83, 0x95, 0x9d, 0x20, 0x67, 0x7f, 0xf1, 0xc6, 0x70, 0x45, 0xab,
  0x8a, 0x81, 0xf5, 0xc8, 0xeb, 0x4d, 0x66, 0x4d, 0xee, 0xac, 0x40, 0x2f,
  0x7b, 0x4b, 0x02, 0x03, 0x01, 0x00, 0x01, 0x02, 0x41, 0x00, 0xa3, 0x66,
  0x82, 0x1f, 0x64, 0x69, 0x5b, 0xb1, 0x6c, 0x27, 0x31, 0xf5, 0x1a, 0x16,
  0x21, 0xe4, 0x74, 0xbc, 0xb7, 0xef, 0x26, 0xff, 0x5e, 0x64, 0xd0, 0xab,
  0x29, 0x7c, 0xca, 0xc7, 0xfa, 0x93, 0xc2, 0x9b, 0x58, 0xff, 0x0f, 0xb7,
  0xe0, 0x13, 0x73, 0xd8, 0x7f, 0xec, 0xc9, 0x20, 0x27, 0x77, 0x11, 0x9a,
  0xec, 0xf7, 0xee, 0x85, 0x3c, 0xed, 0xae, 0x5e, 0x8d, 0x03, 0x39, 0xa2,
  0x6b, 0x81, 0x02, 0x21, 0x00, 0xe7, 0x4d, 0x52, 0xe6, 0xae, 0xf4, 0x74,
  0x86, 0x77, 0x65, 0xd3, 0x38, 0x4a, 0x5d, 0x7d, 0x84, 0xd7, 0xc3, 0x2b,
  0x49, 0xca, 0x8c, 0x1d, 0xa8, 0x62, 0x92, 0x78, 0xff, 0xb2, 0x90, 0x28,
  0xe9, 0x02, 0x21, 0x00, 0xe5, 0xf1, 0xaa, 0xd2, 0xd7, 0xf0, 0xf9, 0x75,
  0xce, 0xba, 0xf5, 0x44, 0xc7, 0x74, 0x56, 0x27, 0x94, 0x70, 0x58, 0x73,
  0x5a, 0x92, 0xd9, 0x12, 0xbd, 0xa9, 0x71, 0x9c, 0xc9, 0x31, 0xa2, 0x13,
  0x02, 0x20, 0x78, 0x4c, 0x21, 0xf2, 0xb2, 0x49, 0x97, 0x95, 0x1b, 0xe2,
  0x0c, 0x91, 0xb9, 0x33, 0x98, 0x85, 0x8f, 0xc6, 0x04, 0xec, 0x92, 0xf8,
  0x7e, 0xb0, 0x45, 0xdc, 0x12, 0x2c, 0x42, 0x8d, 0x71, 0x89, 0x02, 0x20,
  0x3a, 0x06, 0x84, 0x0e, 0xf4, 0xc3, 0x30, 0x90, 0x53, 0xfc, 0xc5, 0xcb,
  0xf7, 0x71, 0x1a, 0x14, 0x9e, 0xd6, 0xc2, 0xdb, 0x49, 0x2d, 0xe9, 0x6d,
  0x5b, 0x43, 0x19, 0x12, 0x71, 0x8a, 0xfe, 0xd5, 0x02, 0x20, 0x3f, 0xf4,
  0x8d, 0x97, 0x56, 0xbc, 0xf7, 0xcd, 0xd7, 0x75, 0xad, 0x7d, 0x1a, 0xc3,
  0xdd, 0x57, 0x2d, 0x43, 0x3a, 0xab, 0x47, 0x06, 0x5a, 0x06, 0x9b, 0xed,
  0x05, 0x31, 0x4f, 0x01, 0x4a, 0x87
};

void setup() {

  delay(1000);

  WiFi.softAP(ssid);
  IPAddress apip = WiFi.softAPIP();

  // Init DNS Server for all requests, to intercept everything
  dnsServer.setTTL(300);
  dnsServer.setErrorReplyCode(DNSReplyCode::ServerFailure);
  dnsServer.start(DNS_PORT, "*", apip);
  //-----------------

  // Init WEB server on 80
  server.on("/", handleRoot);
  server.onNotFound(handleRoot);
  server.begin();

  // Init WEB server on TLS 443
  // serverSecure.setServerKeyAndCert_P(rsakey, sizeof(rsakey), x509, sizeof(x509));
  // serverSecure.on("/", handleRoot);
  // serverSecure.onNotFound(handleRoot);
  // serverSecure.begin();

  pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, LOW);
}

void loop() {

  dnsServer.processNextRequest();
  server.handleClient();
}

void handleRoot() {
  response();
}

void response() {
  String htmlRes = HtmlHtml + HtmlTitle + HtmlImage;
  htmlRes += HtmlHtmlClose;
  server.send(200, "text/html", htmlRes);
}

